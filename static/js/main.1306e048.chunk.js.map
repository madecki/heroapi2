{"version":3,"sources":["assets/img/nav_logo.png","assets/icons/boxing.svg","assets/icons/fist.svg","assets/icons/speedometer.svg","assets/icons/thinking.svg","assets/icons/durable.svg","components/Nav/Nav.js","services/heroesAPI.js","assets/icons/index.js","components/HeroSimplified/HeroSimplified.js","components/Loader/Loader.js","components/HeroesFeatured/HeroesFeatured.js","components/SearchView/SearchView.js","components/HeroDetailed/HeroDetailed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","useState","searchInputValue","setSearchInputValue","className","to","src","logo","alt","onChange","event","target","value","type","name","getFullHeroById","id","a","axios","get","data","getHeroPreviewById","powerstats","image","imgUrl","url","boxingIcon","require","fistIcon","speedometerIcon","thinkingIcon","durableIcon","HeroSimplified","icons","combat","durability","intelligence","speed","strength","Loader","featuredIds","HeroesFeatured","featuredHeroes","setFeaturedHeroes","isLoading","setLoadingState","fetchHeroes","heroesArray","push","useEffect","map","key","SearchView","props","seatchForHero","searchName","state","then","searchResults","error","setState","errorInfo","searchList","results","console","log","match","params","this","React","Component","HeroDetailed","heroData","setHeroData","useParams","fetchHero","fullHeroInfo","App","exact","path","component","href","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1306e048.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nav_logo.711aa06f.png\";","module.exports = __webpack_public_path__ + \"static/media/boxing.1698dbf2.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.90c5025d.svg\";","module.exports = __webpack_public_path__ + \"static/media/speedometer.f09b4e84.svg\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e11713e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/durable.68a9807a.svg\";","import React, { useState } from 'react';\nimport logo from '../../assets/img/nav_logo.png'\nimport './Nav.css';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  const [ searchInputValue, setSearchInputValue ] = useState('');\n\n  return (\n    <nav className=\"nav\">\n      <div className=\"container\">\n        <Link to=\"/\"><img className=\"nav__logo\" src={logo} alt=\"Superhero Database\" /></Link>\n        <div className=\"nav__search\">\n          <input onChange={event => {setSearchInputValue(event.target.value)}} value={searchInputValue} type=\"text\" name=\"search\" />\n          <Link to={`/search/${searchInputValue}`}><button>find hero!</button></Link>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import axios from 'axios';\n\nconst accessToken = 3658742804152352;\n\nexport const getFullHeroById = async id => {\n  const {data} = await axios.get(`https://superheroapi.com/api/${accessToken}/${id}`)\n  return data;\n}\n\nexport const searchHeroByName = name => {\n  return axios.get(`https://superheroapi.com/api/${accessToken}/search/${name}`)\n}\n\nexport const getHeroPreviewById = async id => {\n  const {data:powerstats} = await axios.get(`https://superheroapi.com/api/${accessToken}/${id}/powerstats`);\n  const {data:image} = await axios.get(`https://superheroapi.com/api/${accessToken}/${id}/image`);\n  return { name: powerstats.name, powerstats, imgUrl: image.url, id };\n}","export const boxingIcon = require('./boxing.svg');\nexport const fistIcon = require('./fist.svg');\nexport const speedometerIcon = require('./speedometer.svg');\nexport const thinkingIcon = require('./thinking.svg');\nexport const durableIcon = require('./durable.svg');\n","import React from 'react';\nimport './HeroSimplified.css';\nimport * as icons from '../../assets/icons';\nimport { Link } from 'react-router-dom';\n\nfunction HeroSimplified({ imgUrl, name, powerstats, id }) {\n  return (\n    <article className=\"featured__hero\">\n      <h2>{name}</h2>\n      <Link to={`hero/${id}`}><img className=\"featured__hero__img\" src={imgUrl} alt={`${name} illustration`}/></Link>\n      <div className=\"featured__hero__stats\">\n        <div>\n          <img className=\"featured__hero__stats_icon\" src={icons.boxingIcon} alt=\"combat icon\" />\n          <p>{powerstats.combat}</p>\n        </div>\n\n        <div>\n          <img className=\"featured__hero__stats_icon\" src={icons.durableIcon} alt=\"combat icon\" />\n          <p>{powerstats.durability}</p>\n        </div>\n\n        <div>\n          <img className=\"featured__hero__stats_icon\" src={icons.thinkingIcon} alt=\"combat icon\" />\n          <p>{powerstats.intelligence}</p>\n        </div>\n\n        <div>\n          <img className=\"featured__hero__stats_icon\" src={icons.speedometerIcon} alt=\"combat icon\" />\n          <p>{powerstats.speed}</p>\n        </div>\n\n        <div>\n          <img className=\"featured__hero__stats_icon\" src={icons.fistIcon} alt=\"combat icon\" />\n          <p>{powerstats.strength}</p>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default HeroSimplified;\n","import React from 'react';\nimport './Loader.css';\n\nfunction Loader() {\n  return <div className=\"lds-ripple\"><div></div><div></div></div>\n}\n\nexport default Loader;","import React, { useEffect, useState } from 'react';\nimport { getHeroPreviewById } from '../../services/heroesAPI'\nimport HeroSimplified from '../HeroSimplified/HeroSimplified';\nimport './HeroesFeatured.css';\nimport Loader from '../Loader/Loader';\n\nconst featuredIds = [\n  \"644\",\n  \"70\",\n  \"720\",\n];\n\nfunction HeroesFeatured() {\n  const [featuredHeroes, setFeaturedHeroes] = useState([]);\n  const [isLoading, setLoadingState] = useState(true);\n\n  const fetchHeroes = async () => {\n    const heroesArray = [];\n    for (const id of featuredIds) {\n      const data = await getHeroPreviewById(id);\n      heroesArray.push(data);\n    }\n\n    setFeaturedHeroes(heroesArray)\n    setLoadingState(false)\n  }\n\n  useEffect(() => {\n    fetchHeroes();\n  }, [])\n\n  return (\n    <>\n      <section className=\"featured\">\n        <h1>Featured Heroes</h1>\n        {!isLoading && <div className=\"featured__list\">\n          {featuredHeroes.map(({name, imgUrl, powerstats, id}) => {\n            return (\n              <HeroSimplified key={id} id={id} name={name} imgUrl={imgUrl} powerstats={powerstats}/>\n            )\n          })}\n        </div>}\n        {isLoading && \n          <div className=\"loader-container\">\n            <Loader />\n          </div>}\n      </section>\n    </>\n  );\n}\n\nexport default HeroesFeatured;\n","import React from 'react';\nimport { searchHeroByName } from '../../services/heroesAPI';\nimport HeroSimplified from '../HeroSimplified/HeroSimplified';\n\nexport default class SearchView extends React.Component {\n  constructor(props) {\n    super();\n    console.log(props.match.params.name);\n    this.state = {\n      searchName: props.match.params.name,\n      searchList: [],\n      errorInfo: ''\n    }\n  }\n\n  seatchForHero = () => {\n    const {searchName} = this.state\n    searchHeroByName(searchName).then(searchResults => {\n      const { data } = searchResults;\n      if (data.error) {\n        this.setState({errorInfo: data.error})\n        this.setState({searchList: []})\n        return;\n      }\n\n      const { results } = data;\n      this.setState({searchList: results})\n      this.setState({errorInfo: ''})\n      console.log(results)\n    })   \n  }\n\n  componentDidMount() {\n    this.seatchForHero();                   \n  };\n\n  // componentDidUpdate = () =>  {\n  //   this.seatchForHero();\n  // }\n  \n  render() {\n    return (\n      <section>\n        { this.state.errorInfo && <h2>{this.state.errorInfo}</h2>}\n        <ul>\n          {this.state.searchList.map(({name, image, powerstats, id} = {}) => <HeroSimplified key={id} id={id} name={name} imgUrl={image.url} powerstats={powerstats} />)}\n        </ul>\n      </section>\n    )\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { getFullHeroById } from '../../services/heroesAPI'\nimport './HeroDetailed.css';\nimport Loader from '../Loader/Loader';\nimport { useParams } from 'react-router-dom';\n\nfunction HeroDetailed() {\n  const [heroData, setHeroData] = useState({});\n  const [isLoading, setLoadingState] = useState(true);\n  const { id } = useParams();\n\n  const fetchHero = async () => {\n    const fullHeroInfo = await getFullHeroById(id);\n    setHeroData(fullHeroInfo)\n    setLoadingState(false)\n  }\n\n  useEffect(() => {\n    fetchHero();\n  }, [id])\n\n  return (\n    <>\n      <section className=\"featured\">\n        <h1>Featured Heroes</h1>\n        {!isLoading && <div className=\"featured__list\">\n          {heroData.name}\n        </div>}\n        {isLoading && \n          <div className=\"loader-container\">\n            <Loader />\n          </div>}\n      </section>\n    </>\n  );\n}\n\nexport default HeroDetailed;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport HeroesFeatured from './components/HeroesFeatured/HeroesFeatured';\nimport SearchView from './components/SearchView/SearchView';\nimport HeroDetailed from './components/HeroDetailed/HeroDetailed';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Nav />\n        <main>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\">\n                <HeroesFeatured />\n              </Route>\n              <Route path=\"/search/:name\" component={SearchView} />\n              <Route path=\"/hero/:id\">\n                <HeroDetailed />\n              </Route>\n            </Switch>\n          </div>\n        </main>\n      </Router>\n      <footer>\n        <div className=\"container\">\n          <p>This content is kindly provided by <a href=\"https://superheroapi.com/\">Superhero API</a></p>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}